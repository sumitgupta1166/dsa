//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    int maxLen(vector<int> &arr) {
        map<int,int> mpp;
        for(int i=0;i<arr.size();i++)
        arr[i]=arr[i]==0?-1:1;
        int sm=0,mxlen=0;
        for(int i=0;i<arr.size();i++)
        {
            sm+=arr[i];
            if(sm==0) 
            mxlen=max(mxlen,i+1);
            if(mpp.find(sm)!=mpp.end())
            mxlen=max(mxlen,i-mpp[sm]);
            else
            mpp[sm]=i;
        }
        return mxlen;
        // Your code here
    }
};


//{ Driver Code Starts.

int main() {
    int T;
    cin >> T;
    cin.ignore(); // To ignore the newline character after reading T

    while (T--) {
        string line;
        getline(cin, line); // Read the whole line for the array

        // Convert the line into an array of integers
        stringstream ss(line);
        vector<int> a;
        int num;
        while (ss >> num) {
            a.push_back(num);
        }

        // Create the solution object
        Solution obj;

        // Call the maxLen function and print the result
        cout << obj.maxLen(a) << endl;
    }

    return 0;
}
// } Driver Code Ends
